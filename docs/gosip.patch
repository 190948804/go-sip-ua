diff --git a/sip/auth.go b/sip/auth.go
index 8990b3c..652659e 100644
--- a/sip/auth.go
+++ b/sip/auth.go
@@ -5,6 +5,7 @@ import (
 	"encoding/hex"
 	"fmt"
 	"regexp"
+	"strings"
 )
 
 // currently only Digest and MD5
@@ -26,18 +27,19 @@ func AuthFromValue(value string) *Authorization {
 		other:     make(map[string]string),
 	}
 
-	re := regexp.MustCompile(`([\w]+)="([^"]+)"`)
+	re := regexp.MustCompile(`([\w]+)=("([^"]+)"|([\w]+))`)
 	matches := re.FindAllStringSubmatch(value, -1)
 	for _, match := range matches {
+		value2 := strings.Replace(match[2], "\"", "", -1)
 		switch match[1] {
 		case "realm":
-			auth.realm = match[2]
+			auth.realm = value2
 		case "algorithm":
-			auth.algorithm = match[2]
+			auth.algorithm = value2
 		case "nonce":
-			auth.nonce = match[2]
+			auth.nonce = value2
 		default:
-			auth.other[match[1]] = match[2]
+			auth.other[match[1]] = value2
 		}
 	}
 
diff --git a/sip/message.go b/sip/message.go
index 35fd9aa..298141e 100644
--- a/sip/message.go
+++ b/sip/message.go
@@ -39,6 +39,10 @@ const (
 	NOTIFY    RequestMethod = "NOTIFY"
 	REFER     RequestMethod = "REFER"
 	INFO      RequestMethod = "INFO"
+	UPDATE    RequestMethod = "UPDATE"
+	PRACK     RequestMethod = "PRACK"
+	PUBLISH   RequestMethod = "PUBLISH"
+	MESSAGE   RequestMethod = "MESSAGE"
 )
 
 type MessageID string
diff --git a/transaction/client_tx.go b/transaction/client_tx.go
index cdab81f..c86ac92 100644
--- a/transaction/client_tx.go
+++ b/transaction/client_tx.go
@@ -223,6 +223,9 @@ func (tx clientTx) ack() {
 	cseq.MethodName = sip.ACK
 	ack.AppendHeader(cseq)
 
+	maxForwards := sip.MaxForwards(70)
+	ack.AppendHeader(&maxForwards)
+
 	// Send the ACK.
 	err := tx.tpl.Send(ack)
 	if err != nil {
diff --git a/transaction/server_tx.go b/transaction/server_tx.go
index 8d7ec84..b535318 100644
--- a/transaction/server_tx.go
+++ b/transaction/server_tx.go
@@ -399,7 +399,7 @@ func (tx *serverTx) transportErr() {
 	tx.mu.RUnlock()
 
 	err = &TxTransportError{
-		fmt.Errorf("transaction failed to send %s: %w", res, err),
+		fmt.Errorf("transaction failed to send %s: %v", res, err),
 		tx.Key(),
 		fmt.Sprintf("%p", tx),
 	}
